{
	"swagger": "2.0",
	"info": {
		"version": " 1.1.1",
		"title": "PointControl - Api",
		"description": "This is an API to save and track working hours records by employees of a company",
		"author": "Leonardo Dias Lissone Santomero",
		"Site Funcion√°rios": "http://pointcontrol.com.br/",
    "Site Admins": "http://pointcontrol-admin.com.br/",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"email": "leonardo.lissonez@gmail.com"
		}
	},
	"host": "localhost:5000/api/",
	"basePath": "v1",
	"tags": [
    {
			"name": "User",
			"description": "User in the point control microservice database"
		},
    {
			"name": "Company",
			"description": "Company in the point control microservice database"
		},
		{
			"name": "Employee",
			"description": "Employee in the point control microservice database"
		},
    {
			"name": "Absence",
			"description": "Absence in the point control microservice database"
		},
    {
			"name": "Point",
			"description": "Point in the point control microservice database"
		}
	],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
	"paths": {
    "/user/login": {
      "post": {
				"tags": [
					"User"
				],
				"summary": "Employee log in and verify exists",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
						"name": "user",
						"in": "body",
						"required": true,
						"description": "Employee user sign in data",
						"schema": {
							"type": "object",
							"properties": {
								"cpf": {
									"type": "string"
								},
								"password": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
							"type": "object",
              "properties": {
                "user": {
                  "$ref": "#/definitions/Employee"
                },
                "token": {
                  "type": "string"
                },
								"tokenExpires": {
									"type": "number"
								}
              }
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "400": {
						"description": "Bad request"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
    },
    "/user/login/admin": {
      "post": {
				"tags": [
					"User"
				],
				"summary": "Admin user log in and verify exists",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
						"name": "user",
						"in": "body",
						"required": true,
						"description": "Admin user sign in data",
						"schema": {
							"type": "object",
							"properties": {
								"email": {
									"type": "string"
								},
								"password": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
							"type": "object",
              "properties": {
                "user": {
                  "$ref": "#/definitions/User"
                },
                "token": {
                  "type": "string"
                },
								"tokenExpires": {
									"type": "number"
								}
              }
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "400": {
						"description": "Bad request"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
    },
    "/user/": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"User"
				],
				"summary": "Get a list of all users directly in the database",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/User"
              }
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
    },
    "/user/{email}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"User"
				],
				"summary": "Get an user for your email directly from the database",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "E-mail",
            "type": "string"
          }
        ],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
              "$ref": "#/definitions/Email"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
    },
    "/user/{id}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"User"
				],
				"summary": "Register user in database",
				"produces": [
					"application/json"
				],
				"parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Identify code of User",
            "type": "string"
          },
          {
						"name": "user",
						"in": "body",
						"required": true,
						"description": "User sign up data",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"role": {
									"type": "string"
								},
                "companyCnpj": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
							"type": "object",
              "properties": {
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "409": {
						"description": "Already exists"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
    },
    "/user/recover": {
			"get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"User"
				],
				"summary": "Recover user with token",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
							"$ref": "#/definitions/User"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
		},
    "/change/password": {
			"patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"User"
				],
				"summary": "Change user employee password",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
            "name": "password",
            "in": "body",
            "required": true,
            "description": "New user employee password",
            "type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
							"$ref": "#/definitions/Employee"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
		},
    "/change/password/admin": {
			"patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"User"
				],
				"summary": "Change admin user password",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
            "name": "password",
            "in": "body",
            "required": true,
            "description": "New user password",
            "type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
							"$ref": "#/definitions/User"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
		},
    "/company/": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Company"
				],
				"summary": "Get a list of all companies directly in the database",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Company"
              }
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
    },
    "/company/{cnpj}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Company"
				],
				"summary": "Get an company for your cnpj directly from the database",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
            "name": "cnpj",
            "in": "path",
            "required": true,
            "description": "Company's identify document",
            "type": "string"
          }
        ],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
              "$ref": "#/definitions/Company"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
    },
    "/company": {
			"post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Company"
				],
				"summary": "Insert a new company in the database",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
          {
						"name": "company",
						"in": "body",
						"required": true,
						"description": "Company entity in the db",
						"schema": {
							"type": "object",
							"properties": {
                "cnpj": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/Company"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "409": {
						"description": "Already exists"
					},
					"500": {
						"description": "Company already exists"
					}
				}
			}
		},
    "/company/{cnpj}/": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Company"
				],
				"summary": "Register company in database",
				"produces": [
					"application/json"
				],
				"parameters": [
          {
            "name": "cnpj",
            "in": "path",
            "required": true,
            "description": "Company's identify document",
            "type": "string"
          },
          {
						"name": "company",
						"in": "body",
						"required": true,
						"description": "Company entity in the db",
						"schema": {
							"type": "object",
							"properties": {
                "name": {
                  "type": "string"
                }
              }
						}
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
							"type": "object",
              "properties": {
                "user": {
                  "$ref": "#/definitions/Company"
                }
              }
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "409": {
						"description": "Already exists"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
    },
		"/employee/": {
			"get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Employee"
				],
				"summary": "Get a list of all employees directly in the database",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Employee"
              }
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
		},
    "/employee/{cpf}": {
			"get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Employee"
				],
				"summary": "Get an employee for your cpf directly from the database",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "description": "Employee's identify document",
            "type": "string"
          }
        ],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
							"$ref": "#/definitions/Employee"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
		},
    "/employee/company/{cnpj}": {
			"get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Employee"
				],
				"summary": "Get a list of all employees for your company cnpj directly in the database",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
            "name": "cnpj",
            "in": "path",
            "required": true,
            "description": "Employee's company identify document",
            "type": "string"
          }
        ],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Employee"
              }
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
		},
    "/employee": {
			"post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Employee"
				],
				"summary": "Insert a new employee in the database",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
          {
						"name": "employee",
						"in": "body",
						"required": true,
						"description": "Employee entity in the db",
						"schema": {
							"type": "object",
							"properties": {
								"cpf": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"dtBirth": {
									"type": "date-time",
									"example": "2001-12-11T22:30:00Z"
								},
								"entry": {
									"type": "string",
									"example": "08:00"
								},
								"exit": {
									"type": "string",
									"example": "18:00"
								},
								"workingTime": {
									"type": "integer"
								},
								"role": {
									"type": "string"
								},
								"companyCpf": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/Employee"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "409": {
						"description": "Already exists"
					},
					"500": {
						"description": "Internal Server Error"
					}
				}
			}
		},
    "/employee/{cpf}/": {
			"put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Employee"
				],
				"summary": "Update a employee in the database",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "description": "Employee's identify document",
            "type": "string"
          },
          {
						"name": "employee",
						"in": "body",
						"required": true,
						"description": "Employee entity in the db",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"password": {
									"type": "string"
								},
								"dtBirth": {
									"type": "date-time",
									"example": "2001-12-11T22:30:00Z"
								},
								"entry": {
									"type": "string",
									"example": "08:00"
								},
								"exit": {
									"type": "string",
									"example": "18:00"
								},
								"workingTime": {
									"type": "integer"
								},
								"role": {
									"type": "string"
								},
								"companyCpf": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Employee"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
						"description": "Internal Server Error"
					}
				}
			}
		},
    "/absence/": {
			"get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Absence"
				],
				"summary": "Get a list of all employee absences directly in the database",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Absence"
              }
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
		},
    "/absence/{id}": {
			"get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Absence"
				],
				"summary": "Get an absence for your indentify number directly from the database",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Absence's identify number",
            "type": "integer"
          }
        ],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
							"$ref": "#/definitions/Absence"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
		},
    "/absence/status/{status}": {
			"get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Absence"
				],
				"summary": "Get a list of all absences for your status directly from the database",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "description": "Absence's status",
            "type": "string"
          }
        ],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Absence"
              }
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
		},
    "/absence": {
			"post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Absence"
				],
				"summary": "Insert the absence of the employee in the database",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
          {
						"name": "absence",
						"in": "body",
						"required": true,
						"description": "Absence entity in the db",
						"schema": {
							"type": "object",
							"properties": {
                "type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "startTime": {
                  "type": "date-time",
                  "example": "2021-01-30T15:00:00Z"
                },
                "endTime": {
                  "type": "date-time",
                  "example": "2021-01-30T15:00:00Z"
                },
                "employeeCpf": {
                  "type": "string"
                }
              }
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/Absence"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "409": {
						"description": "Already exists"
					},
					"500": {
						"description": "Internal Server Error"
					}
				}
			}
		},
    "/absence/{id}/": {
			"put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Absence"
				],
				"summary": "Update the employee's absence in the database",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Absence identify number of database",
            "type": "number"
          },
          {
						"name": "absence",
						"in": "body",
						"required": true,
						"description": "Absence entity in the db",
						"schema": {
							"type": "object",
							"properties": {
                "type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "startTime": {
                  "type": "date-time",
                  "example": "2021-01-30T15:00:00Z"
                },
                "endTime": {
                  "type": "date-time",
                  "example": "2021-01-30T15:00:00Z"
                },
                "employeeCpf": {
                  "type": "string"
                }
              }
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Absence"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
						"description": "Internal Server Error"
					}
				}
			}
		},
    "/absence/{ id }/": {
			"delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Absence"
				],
				"summary": "Delete an absence for your indentify number directly from the database",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Absence's identify number",
            "type": "integer"
          }
        ],
				"responses": {
					"200": {
						"description": "Ok"
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
		},
    "/point/{createdAt}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Point"
				],
				"summary": "Get a list of all points for your created date directly from the database",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
            "name": "createdAt",
            "in": "path",
            "required": true,
            "description": "Absence's created date (yyyy-MM-dd)",
            "type": "string"
          }
        ],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Point"
              }
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
    },
    "/point/employee/{cpf}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Point"
				],
				"summary": "Get a list of all points for employee document identify directly from the database",
				"produces": [
					"application/json"
				],
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "description": "Employee's identify document",
            "type": "string"
          }
        ],
				"responses": {
					"200": {
						"description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Point"
              }
						}
					},
          "401": {
						"description": "Unauthorized"
					},
          "404": {
						"description": "Not found"
					},
          "500": {
            "description": "Internal Server Error"
          }
				}
			}
    },
    "/point": {
			"post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
				"tags": [
					"Point"
				],
				"summary": "Insert an employee's point into the database",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
          {
						"name": "point",
						"in": "body",
						"required": true,
						"description": "Point entity in the db",
						"schema": {
							"type": "object",
							"properties": {
                "employeeCpf": {
                  "type": "string"
                }
              }
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/Point"
						}
					},
          "401": {
						"description": "Unauthorized"
					},
					"500": {
						"description": "Internal Server Error"
					}
				}
			}
		}
	},
	"definitions": {
    "User": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
        "name": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
        "role": {
					"type": "string"
				},
        "firstAccess": {
					"type": "boolean"
				},
        "companyCnpj": {
					"type": "string"
				},
        "createdAt": {
          "type": "date-time",
          "example": "2021-01-30T08:30:00Z"
        },
        "updatedAt": {
          "type": "date-time",
          "example": "2021-01-30T08:30:00Z"
        }
			}
		},
    "Employee": {
			"type": "object",
			"properties": {
				"cpf": {
					"type": "string"
				},
        "name": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
        "dtBirth": {
					"type": "date-time",
          "example": "2001-12-11T22:30:00Z"
				},
				"entry": {
					"type": "string",
          "example": "08:00"
				},
        "exit": {
					"type": "date-time",
          "example": "18:00"
				},
        "workingTime": {
					"type": "integer"
				},
        "role": {
					"type": "string"
				},
        "companyCpf": {
					"type": "string"
				},
        "createdAt": {
          "type": "date-time",
          "example": "2021-01-30T08:30:00Z"
        },
        "updatedAt": {
          "type": "date-time",
          "example": "2021-01-30T08:30:00Z"
        },
        "company": {
          "type": "object",
					"$ref": "#/definitions/Company"
        },
        "address": {
          "type": "object",
					"$ref": "#/definitions/Address"
        },
        "points": {
          "type": "array",
          "items": {
						"$ref": "#/definitions/Point"
          }
        },
        "absences": {
          "type": "array",
          "items": {
						"$ref": "#/definitions/Absence"
          }
        }
			}
		},
    "Address": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer"
				},
        "street": {
					"type": "string"
				},
				"district": {
					"type": "string"
				},
				"city": {
					"type": "string"
				},
        "employeeCpf": {
					"type": "string"
				},
        "state": {
					"type": "string"
				},
        "createdAt": {
          "type": "date-time",
          "example": "2021-01-30T08:30:00Z"
        },
        "updatedAt": {
          "type": "date-time",
          "example": "2021-01-30T08:30:00Z"
        },
        "employee": {
          "type": "object",
					"$ref": "#/definitions/Employee"
        }
			}
		},
    "Company": {
			"type": "object",
			"properties": {
				"cnpj": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
        "createdAt": {
          "type": "date-time",
          "example": "2021-01-30T08:30:00Z"
        },
        "updatedAt": {
          "type": "date-time",
          "example": "2021-01-30T08:30:00Z"
        },
        "employees": {
          "type": "array",
          "items": {
						"$ref": "#/definitions/Employee"
          }
        }
			}
		},
    "Absence": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer"
				},
				"type": {
					"type": "integer",
          "example": "0=Negado; 1=AguardandoAn√°lise; 2=Aprovado"
				},
				"description": {
					"type": "string"
				},
				"startTime": {
					"type": "date-time",
          "example": "2021-01-30T15:00:00Z"
				},
				"endTime": {
					"type": "date-time",
          "example": "2021-01-30T15:00:00Z"
				},
        "justification": {
					"type": "string"
				},
        "employeeCpf": {
					"type": "string"
				},
        "createdAt": {
          "type": "date-time",
          "example": "2021-01-30T08:30:00Z"
        },
        "updatedAt": {
          "type": "date-time",
          "example": "2021-01-30T08:30:00Z"
        },
        "employee": {
          "type": "object",
					"$ref": "#/definitions/Employee"
        }
			}
		},
    "Point": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer"
				},
        "employeeCpf": {
					"type": "string"
				},
        "createdAt": {
          "type": "date-time",
          "example": "2021-01-30T08:30:00Z"
        },
        "updatedAt": {
          "type": "date-time",
          "example": "2021-01-30T08:30:00Z"
        },
        "employee": {
          "type": "object",
					"$ref": "#/definitions/Employee"
        }
			}
		}
	}
}